<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>X to Bytes</title>
  
  
  <link href="https://blog.x2b.net/atom.xml" rel="self"/>
  
  <link href="https://blog.x2b.net/"/>
  <updated>2023-05-14T12:58:41.036Z</updated>
  <id>https://blog.x2b.net/</id>
  
  <author>
    <name>assassing</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker 基础概念</title>
    <link href="https://blog.x2b.net/3341501969/"/>
    <id>https://blog.x2b.net/3341501969/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-14T12:58:41.036Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;虚拟化技术&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#虚拟化技术&quot;&gt;&lt;/a&gt; 虚拟化技术&lt;/h1&gt;
&lt;p&gt;虚拟化技术是一种计算机资源管理技术，它控制计算机硬件资源并将其抽象化，以统一的形式呈现给应用程序。对于用户而言，虚拟化只是定义了隐藏真实环境的方式，而要实现虚拟化，还需要具体执行虚拟化过程的程序。&lt;/p&gt;
&lt;p&gt;虚拟化技术可分为基于硬件的虚拟化和基于软件的虚拟化。&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://blog.x2b.net/categories/Docker/"/>
    
    <category term="1.基本操作" scheme="https://blog.x2b.net/categories/Docker/1-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 中用户与用户组</title>
    <link href="https://blog.x2b.net/2592592171/"/>
    <id>https://blog.x2b.net/2592592171/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-13T15:34:08.256Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;用户标识符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#用户标识符&quot;&gt;&lt;/a&gt; 用户标识符&lt;/h1&gt;
&lt;p&gt;每个用户至少都有两个 ID，用户 ID（UID，User ID）和用户组 ID（GID，Group ID）。&lt;/p&gt;
&lt;p&gt;当显示文件属性时，系统会根据 &lt;code&gt;/etc/passwd&lt;/code&gt; 与 &lt;code&gt;/etc/group&lt;/code&gt; 文件的内容找到 UID/GID 对应的账号与组名再显示出来。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="0.基础概论" scheme="https://blog.x2b.net/categories/Linux/0-%E5%9F%BA%E7%A1%80%E6%A6%82%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 目录配置标准与结构</title>
    <link href="https://blog.x2b.net/4087499240/"/>
    <id>https://blog.x2b.net/4087499240/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-13T15:37:03.919Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;目录配置标准&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#目录配置标准&quot;&gt;&lt;/a&gt; 目录配置标准&lt;/h1&gt;
&lt;p&gt;Linux 采用将文件储存在单个目录结构中，这种目录被称为虚拟目录（Virtual Directory）。虚拟目录将安装在主机上的所有储存设备的文件路径纳入单个目录结构中。&lt;/p&gt;
&lt;p&gt;各种发行版遵循同一套文件系统层次结构标准（FHS，Filesystem Hierarchy Standard），目的在于规范每个特定目录应该放什么数据。FHS 依据文件系统使用的频繁与否，以及是否允许使用者随意变更，将目录定义为四种交互形态：&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="0.基础概论" scheme="https://blog.x2b.net/categories/Linux/0-%E5%9F%BA%E7%A1%80%E6%A6%82%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>计算机软件基础</title>
    <link href="https://blog.x2b.net/2759544459/"/>
    <id>https://blog.x2b.net/2759544459/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-04-26T09:08:36.659Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;数字系统&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数字系统&quot;&gt;&lt;/a&gt; 数字系统&lt;/h1&gt;
&lt;p&gt;计算机使用电信号的开和关来代表二进制的 1 和 0，这种逢 2 进 1 位的表示法称为二进制。除了二进制，常用的进制还有八进制和十六进制。然而，现实生活中使用的数字系统是十进制。&lt;/p&gt;
&lt;p&gt;在编程语言中，表示二进制数的前缀是&amp;quot;0b&amp;quot;，表示八进制数的前缀是&amp;quot;0o&amp;quot;，表示十六进制数的前缀是&amp;quot;0x&amp;quot;。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="0.基础概论" scheme="https://blog.x2b.net/categories/Linux/0-%E5%9F%BA%E7%A1%80%E6%A6%82%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 文件内容查看</title>
    <link href="https://blog.x2b.net/1251081056/"/>
    <id>https://blog.x2b.net/1251081056/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-07T10:22:33.083Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;一次性输出&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一次性输出&quot;&gt;&lt;/a&gt; 一次性输出&lt;/h1&gt;
&lt;p&gt;在 Linux 中，可以使用 &lt;code&gt;cat&lt;/code&gt; 和 &lt;code&gt;tac&lt;/code&gt; 命令一次性将文本内容打印出来，即将标准输入的数据复制到标准输出。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat&lt;/code&gt; 是 Catenate 的缩写，从第一行开始显示文件内容。另外一个重要的应用是组合多个文件。如果没有指定文件或文件为 &lt;code&gt;-&lt;/code&gt;，则从标准输入读取。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="1.基本操作" scheme="https://blog.x2b.net/categories/Linux/1-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 下搜索文件</title>
    <link href="https://blog.x2b.net/3570307132/"/>
    <id>https://blog.x2b.net/3570307132/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-04-26T16:21:31.567Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;通配符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#通配符&quot;&gt;&lt;/a&gt; 通配符&lt;/h1&gt;
&lt;p&gt;通配符（wildcard）是 Bash 操作接口的一个功能。常用的通配符如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;意义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;代表 0 到无穷多个任意字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;代表一定有一个任意字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[]&lt;/td&gt;
&lt;td&gt;代表一定有一个括号内的字符，例如 [xgw] 代表可能是 xgw 其中一个。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[-]&lt;/td&gt;
&lt;td&gt;代表在编码顺序内的所有字符，例如 [0-9] 代表 0 到 9 之间的所有数字。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[^]&lt;/td&gt;
&lt;td&gt;第一个字符为 ^ 代表反向选择，例如 [^xpw]代表任意一个非 xpw 的字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="1.基本操作" scheme="https://blog.x2b.net/categories/Linux/1-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 基本文件操作</title>
    <link href="https://blog.x2b.net/3891118029/"/>
    <id>https://blog.x2b.net/3891118029/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-07T10:19:42.919Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;文件和目录查询&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#文件和目录查询&quot;&gt;&lt;/a&gt; 文件和目录查询&lt;/h1&gt;
&lt;p&gt;使用 &lt;code&gt;ls&lt;/code&gt; 命令可以列出目录中的文件，不包括隐藏文件。默认按文件名排序。&lt;code&gt;ll&lt;/code&gt; 命令是 &lt;code&gt;ls -l&lt;/code&gt; 的别名。&lt;/p&gt;
&lt;p&gt;以下是一些常用选项参数：&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="1.基本操作" scheme="https://blog.x2b.net/categories/Linux/1-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 基本目录操作</title>
    <link href="https://blog.x2b.net/735422586/"/>
    <id>https://blog.x2b.net/735422586/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-07T10:21:23.443Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;路径&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#路径&quot;&gt;&lt;/a&gt; 路径&lt;/h1&gt;
&lt;p&gt;根据文件名写法不同，可以分为绝对路径（absolute）和相对路径（relative）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;绝对路径&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由根目录开始写起的文件或目录名称，定义了在虚拟目录结构中该文件的确切位置。例如 &lt;code&gt;/home/base/.bashrc&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;相对路径&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于目前位置的路径写法。例如 &lt;code&gt;./base/.bashrc&lt;/code&gt; 或 &lt;code&gt;../../home/base/&lt;/code&gt; 等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="1.基本操作" scheme="https://blog.x2b.net/categories/Linux/1-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 备份与刻录工具</title>
    <link href="https://blog.x2b.net/3733482185/"/>
    <id>https://blog.x2b.net/3733482185/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-07T12:06:17.641Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;备份基础&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#备份基础&quot;&gt;&lt;/a&gt; 备份基础&lt;/h1&gt;
&lt;p&gt;系统备份重要目录有：&lt;code&gt;/etc/&lt;/code&gt;、&lt;code&gt;/home/&lt;/code&gt;、&lt;code&gt;/root/&lt;/code&gt;、&lt;code&gt;/var&lt;/code&gt;。不需要备份的目录有：&lt;code&gt;/dev&lt;/code&gt;、&lt;code&gt;/proc&lt;/code&gt;、&lt;code&gt;/sys&lt;/code&gt;、&lt;code&gt;/run&lt;/code&gt;、&lt;code&gt;/mnt&lt;/code&gt;、&lt;code&gt;/media&lt;/code&gt;、&lt;code&gt;/tmp&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;常见备份类型有 3 种：&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="2.系统管理" scheme="https://blog.x2b.net/categories/Linux/2-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 用户管理</title>
    <link href="https://blog.x2b.net/3199649610/"/>
    <id>https://blog.x2b.net/3199649610/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-04-30T07:22:33.547Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;用户管理&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#用户管理&quot;&gt;&lt;/a&gt; 用户管理&lt;/h1&gt;
&lt;p&gt;针对用户的新增,删除,修改操作.&lt;/p&gt;
&lt;h2 id=&quot;新增用户&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#新增用户&quot;&gt;&lt;/a&gt; 新增用户&lt;/h2&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="2.系统管理" scheme="https://blog.x2b.net/categories/Linux/2-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 软件安装与管理</title>
    <link href="https://blog.x2b.net/1357678012/"/>
    <id>https://blog.x2b.net/1357678012/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-07T12:01:52.777Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;编译安装&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#编译安装&quot;&gt;&lt;/a&gt; 编译安装&lt;/h1&gt;
&lt;p&gt;编译程序是将源代码编译成机器语言生成可执行二进制程序的过程。&lt;/p&gt;
&lt;p&gt;在 Linux 中，可以使用 &lt;code&gt;configure&lt;/code&gt; 命令对系统环境进行检测和收集，生成 &lt;code&gt;Makefile&lt;/code&gt; 文件，&lt;code&gt;make&lt;/code&gt; 命令根据 &lt;code&gt;Makefile&lt;/code&gt; 文件的配置来对源文件进行编译，生成可执行二进制程序。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="2.系统管理" scheme="https://blog.x2b.net/categories/Linux/2-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>NTP 服务</title>
    <link href="https://blog.x2b.net/3532663001/"/>
    <id>https://blog.x2b.net/3532663001/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-11T14:13:39.822Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;ntp-通信协议&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#ntp-通信协议&quot;&gt;&lt;/a&gt; NTP 通信协议&lt;/h1&gt;
&lt;p&gt;NTP 是网络校时协议（Network Time Protocol）。为了修正因为 BIOS 内部芯片问题导致与标准时间（UTC, Coordinated Universal Time）存在的偏差，而通过网络进行时间同步（Synchronize）。此外，DTSS（Digital Time Synchronization Protocol）也可实现同样的功能。&lt;/p&gt;
&lt;p&gt;Linux 系统中有两个时间：&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="4.网络服务" scheme="https://blog.x2b.net/categories/Linux/4-%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 网络基础知识</title>
    <link href="https://blog.x2b.net/799638542/"/>
    <id>https://blog.x2b.net/799638542/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-14T10:59:24.262Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;基本概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基本概念&quot;&gt;&lt;/a&gt; 基本概念&lt;/h1&gt;
&lt;p&gt;Internet（1980 年代）由 ARPANET（1970 年代）发展而来。&lt;/p&gt;
&lt;h2 id=&quot;网络硬件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#网络硬件&quot;&gt;&lt;/a&gt; 网络硬件&lt;/h2&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="4.网络服务" scheme="https://blog.x2b.net/categories/Linux/4-%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>Bash 变量</title>
    <link href="https://blog.x2b.net/2082872357/"/>
    <id>https://blog.x2b.net/2082872357/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-10T18:31:39.997Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;变量定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#变量定义&quot;&gt;&lt;/a&gt; 变量定义&lt;/h1&gt;
&lt;p&gt;变量简单定义就是让某一个特定字符串代表不固定内容。&lt;/p&gt;
&lt;p&gt;在 Bash 中变量分为环境变量和 shell 变量。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="3.脚本编程" scheme="https://blog.x2b.net/categories/Linux/3-%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>Bash 基础</title>
    <link href="https://blog.x2b.net/1325555629/"/>
    <id>https://blog.x2b.net/1325555629/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-10T18:25:04.074Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;shell-的定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#shell-的定义&quot;&gt;&lt;/a&gt; Shell 的定义&lt;/h1&gt;
&lt;p&gt;Shell 是一个命令行解释器，其功能是提供用户操作系统的一个接口，因此 shell 需要可以调用其他软件，用户通过 shell 来操作这些应用程序。也就是只要能够操作应用程序的接口都能够称为 shell。&lt;/p&gt;
&lt;p&gt;可以通过检查 &lt;code&gt;/etc/shells&lt;/code&gt; 来得知当前系统可用的 shell：&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="3.脚本编程" scheme="https://blog.x2b.net/categories/Linux/3-%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>Perl 基础</title>
    <link href="https://blog.x2b.net/591566948/"/>
    <id>https://blog.x2b.net/591566948/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-14T12:01:56.814Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;基本格式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基本格式&quot;&gt;&lt;/a&gt; 基本格式&lt;/h1&gt;
&lt;p&gt;Perl 在 Linux 中是内置程序，可以创建一个最简单的 &lt;code&gt;hello.pl&lt;/code&gt; 来测试：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;root@server1 bin&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;vi&lt;/span&gt; hello.pl 
&lt;span class=&quot;token comment&quot;&gt;#! /usr/bin/perl -w&lt;/span&gt;

print &lt;span class=&quot;token string&quot;&gt;&quot;hello&lt;span class=&quot;token entity&quot; title=&quot;&#92;n&quot;&gt;&#92;n&lt;/span&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;root@server1 bin&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ &lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;755&lt;/span&gt; hello.pl 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;root@server1 bin&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;$ ./hello.pl 
hello&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="3.脚本编程" scheme="https://blog.x2b.net/categories/Linux/3-%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>Shell 脚本基础</title>
    <link href="https://blog.x2b.net/2734315757/"/>
    <id>https://blog.x2b.net/2734315757/</id>
    <published>2022-03-20T01:01:17.000Z</published>
    <updated>2023-05-09T17:10:31.775Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;shell-script-定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#shell-script-定义&quot;&gt;&lt;/a&gt; Shell Script 定义&lt;/h1&gt;
&lt;p&gt;Shell Script 就是利用 shell 的功能所写的一个程序，这个程序使用纯文本文件，将一些 shell 的语法与命令写在里面，搭配正则表达式、管道命令与数据流重定向等功能达到所想要的处理目的。&lt;/p&gt;
&lt;p&gt;脚本编写注意事项：&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.x2b.net/categories/Linux/"/>
    
    <category term="3.脚本编程" scheme="https://blog.x2b.net/categories/Linux/3-%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 Docker Compose 编排容器</title>
    <link href="https://blog.x2b.net/504557237/"/>
    <id>https://blog.x2b.net/504557237/</id>
    <published>2021-10-31T19:26:12.000Z</published>
    <updated>2023-05-15T01:51:23.783Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;docker-compose&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#docker-compose&quot;&gt;&lt;/a&gt; Docker Compose&lt;/h1&gt;
&lt;p&gt;Docker Compose，原名为 Fig，是 Docker 官方开发的用于简化多容器部署和迁移过程的容器编排（Orchestration）插件。Compose 使用一个 YAML 格式的 docker-compose.yml 模板文件来定义一组相关联的应用容器，形成一个服务栈。&lt;/p&gt;
&lt;p&gt;在 Compose 中有几个重要的概念：&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://blog.x2b.net/categories/Docker/"/>
    
    <category term="2.进阶操作" scheme="https://blog.x2b.net/categories/Docker/2-%E8%BF%9B%E9%98%B6%E6%93%8D%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>Docker 安全与监控</title>
    <link href="https://blog.x2b.net/1472106291/"/>
    <id>https://blog.x2b.net/1472106291/</id>
    <published>2021-10-25T20:00:29.000Z</published>
    <updated>2023-05-14T17:15:31.082Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;tls-加密配置&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#tls-加密配置&quot;&gt;&lt;/a&gt; TLS 加密配置&lt;/h1&gt;
&lt;p&gt;Docker Daemon 监听 Socket 有三种方式，分别是 unix、tcp 和 fd。其中，监听 fd 文件是使用 system 的系统专用。&lt;/p&gt;
&lt;p&gt;在默认配置中，Docker Remote API 通过 Socket 监听来自本地的连接，监听地址位于 &lt;code&gt;unix:///var/run/docker.sock&lt;/code&gt;。可以通过 &lt;code&gt;curl&lt;/code&gt; 发送一个简单的请求来测试：&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://blog.x2b.net/categories/Docker/"/>
    
    <category term="2.进阶操作" scheme="https://blog.x2b.net/categories/Docker/2-%E8%BF%9B%E9%98%B6%E6%93%8D%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>Docker API</title>
    <link href="https://blog.x2b.net/2670657393/"/>
    <id>https://blog.x2b.net/2670657393/</id>
    <published>2021-10-25T12:55:34.000Z</published>
    <updated>2023-05-14T17:15:31.083Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;restful&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#restful&quot;&gt;&lt;/a&gt; RESTful&lt;/h1&gt;
&lt;p&gt;Docker API 是一套基于 RESTful（Representational State Transfer，表述性状态转移）设计的 HTTP 接口，用于操作 Docker 服务。它实现在 Docker 服务程序中，并由 Docker 服务程序向外提供。&lt;/p&gt;
&lt;p&gt;RESTful 设计中有几个比较关键的概念：&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://blog.x2b.net/categories/Docker/"/>
    
    <category term="2.进阶操作" scheme="https://blog.x2b.net/categories/Docker/2-%E8%BF%9B%E9%98%B6%E6%93%8D%E4%BD%9C/"/>
    
    
  </entry>
  
</feed>
