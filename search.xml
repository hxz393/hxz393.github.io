<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/16107/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener external nofollow noreferrer">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener external nofollow noreferrer">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener external nofollow noreferrer">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener external nofollow noreferrer">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p><img data-src="../../images/2b2eef0cdf47e13e.jpg" loading="lazy"></p>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener external nofollow noreferrer">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener external nofollow noreferrer">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener external nofollow noreferrer">Generating</a></p>
<h3 id="Deploy-to-remote-sites-Generate-static-files-Generate-static-files"><a href="#Deploy-to-remote-sites-Generate-static-files-Generate-static-files" class="headerlink" title="Deploy to remote sites Generate static files Generate static files"></a>Deploy to remote sites Generate static files Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener external nofollow noreferrer">Deployment</a></p>
]]></content>
      <categories>
        <category>local</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/0/</url>
    <content><![CDATA[<h1 id="计算机简介"><a href="#计算机简介" class="headerlink" title="计算机简介"></a>计算机简介</h1><p>计算机是一种拥有输入和输出设备的机器，它可以通过输入设备接受用户的输入，并经过中央处理器的数学与逻辑单元的处理，将这些输入转换成有用的信息进行生成或储存。因此，计算机可以说是一种具有高度智能化的信息处理工具。</p>
<h2 id="计算机组成"><a href="#计算机组成" class="headerlink" title="计算机组成"></a>计算机组成</h2><p>计算机通常由五大部分组成，它们分别是输入单元、输出单元、中央处理器（CPU）内部的控制单元、算术逻辑单元和内存。这些部分协同工作，使得计算机能够完成复杂的计算和数据处理任务。其中，输入单元用于接收用户的输入信息，输出单元用于向用户展示计算机处理结果，控制单元则负责控制计算机的整个运作过程，算术逻辑单元则处理计算机的算术和逻辑运算，而内存则用于储存数据和程序。这五大部分共同构成了现代计算机的核心。</p>
<h2 id="计算机分类"><a href="#计算机分类" class="headerlink" title="计算机分类"></a>计算机分类</h2><p>根据用途的不同，计算机可以被分为以下几类：</p>
<ul>
<li><p><strong>超级计算机</strong>（Supercomputer）：</p>
<p>这是最快也最贵的计算机，通常用于需要进行高速计算的项目中，比如军事、气象、太空、模拟等。</p>
</li>
<li><p><strong>大型计算机</strong>（Mainframe Computer）：</p>
<p>这种计算机用于处理大规模的数据和复杂的运算，常见于证券、银行、大型企业数据库服务器等场所。</p>
</li>
<li><p><strong>迷你计算机</strong>（Minicomputer）：</p>
<p>迷你计算机是低配版的大型计算机，适用于那些场所环境要求不那么严格的场合，比如科研、工程分析、工厂等。</p>
</li>
<li><p><strong>工作站</strong>（Workstation）：</p>
<p>工作站是专门针对特定用途而设计的计算机，比如图形工作站、机器学习等。与个人电脑相比，工作站更强调稳定性。</p>
</li>
<li><p><strong>微型计算机</strong>（Microcomputer）：</p>
<p>微型计算机也称为个人计算机（PC），包括移动设备和桌面型电脑等。它们是普及度最高的计算机类型，广泛应用于个人和办公场所，具有性价比高和易于携带的优点。</p>
</li>
</ul>
<h1 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1><p>中央处理器（CPU，Central Processing Unit）是计算机中最重要的组成部分之一，它是一个集成了微指令集和特定功能的芯片。CPU 通过执行指令来控制计算机的操作，包括算术逻辑运算、数据存储和检索等核心功能。因此，CPU 可以被认为是计算机的”大脑“，它的性能直接影响计算机的整体运行速度和效率。</p>
<h2 id="CPU的组成单元"><a href="#CPU的组成单元" class="headerlink" title="CPU的组成单元"></a>CPU的组成单元</h2><ul>
<li><p><strong>算术逻辑单元</strong></p>
<p>算术逻辑单元（ALU）是 CPU 中的一个重要组成部分，它主要负责执行算术运算和逻辑运算，如加、减、乘、除、与、或、非等。ALU 的运算结果将被存储在寄存器中，供其他单元继续使用。</p>
</li>
<li><p><strong>控制单元</strong></p>
<p>控制单元（CU）是 CPU 中的另一个重要组成部分，它主要负责协调和控制 CPU 各个单元之间的工作。CU 从内存中读取指令，并解析指令，然后根据指令的要求控制其他单元的操作。CU 还可以将运算结果写回内存或输出到外设。</p>
</li>
</ul>
<p>通过 ALU 和 CU 的紧密配合，CPU 能够实现各种复杂的计算和操作，从而实现计算机的各种功能。</p>
<h2 id="CPU指令集"><a href="#CPU指令集" class="headerlink" title="CPU指令集"></a>CPU指令集</h2><p>CPU 的指令集根据设计理念的不同，可以分为精简指令集（RISC）和复杂指令集（CISC）两种类型：</p>
<ul>
<li><p><strong>精简指令集（RISC，Reduced Instruction Set Computing）</strong></p>
<p>精简指令集的微指令集比较简单明了，每个指令的执行时间都很短，完成的操作比较单一，执行效率高。常见的 RISC CPU 包括 Sun 公司的 SPARC 系列（主要用于学术和银行等大型工作站）、IBM 公司的 Power Architecture（包括 PowerPC，例如索尼 PS 游戏机）和 ARM 系列（主要用于手机、网络设备等嵌入式系统）。</p>
</li>
<li><p><strong>复杂指令集（CISC，Complex Instruction Set Computer）</strong></p>
<p>复杂指令集的每个小指令可以执行一些较低阶的硬件操作，指令数目多而复杂，每条指令的长度不同，执行时间较长，但每个指令可以处理的工作较为丰富。常见的 CISC CPU 包括 AMD 和 Intel 的 x86、x64 架构处理器，其中“x86”是因为最早的 Intel 元组型号 8086 发展而来，架构从 8 位升级到 32 位，现在普遍使用的是 64 位 CPU，称为 x86_64 架构。</p>
</li>
</ul>
<p>不同的指令集在硬件设计和编程语言的选择上有所区别，选择适合自己需求的 CPU 和指令集对于系统的性能和稳定性有着重要的影响。</p>
<h2 id="微指令集"><a href="#微指令集" class="headerlink" title="微指令集"></a>微指令集</h2><p>除了硬件参数差异（比如二级缓存大小）外，不同 x86 架构的 CPU 还有微指令集的区别。例如，Intel 处理器具有独特的指令集，如用于虚拟化（Intel-VT）、视频硬解码（MMX，SSE）等，可以有效提高特定工作的运行效率。</p>
<p>选择适合自己需求的 CPU 和指令集对于系统的性能和稳定性都有着重要的影响。特定的微指令集能够支持特定的操作，例如 SSE 指令集可以提高多媒体应用程序的性能，因此在开发需要高性能计算的应用程序时需要仔细选择微指令集。</p>
<h2 id="多核心"><a href="#多核心" class="headerlink" title="多核心"></a>多核心</h2><p>多核心是指将两个或更多的运算核心嵌入到一颗 CPU 封装中。与单核 CPU 相比，多核 CPU 可以同时执行更多的指令，从而提高系统的运行效率。多核心处理器广泛应用于需要高性能计算的领域，如科学研究、金融分析、人工智能等。同时，多核心处理器也可以提高普通用户在运行多任务时的体验，例如同时打开多个应用程序或运行多个虚拟机。</p>
<h2 id="CPU频率"><a href="#CPU频率" class="headerlink" title="CPU频率"></a>CPU频率</h2><p>CPU 频率是指 CPU 每秒钟所执行的时钟周期数，通常以赫兹（Hz）为单位。频率越高表示 CPU 单位时间内可以执行更多的指令和计算任务。例如，CPU 的频率为 4.0 GHz 表示这颗 CPU 在一秒内可以执行 4 × 10^9 次时钟周期。</p>
<p>但是，CPU 频率并不是衡量 CPU 性能的唯一指标，还需要考虑 CPU 架构、核心数量、缓存大小、指令集支持等因素。相同频率的 CPU 在性能上可能存在巨大差异。因此，在选择 CPU 时需要全面考虑性能、功耗和预算等因素。</p>
<h2 id="南桥和北桥"><a href="#南桥和北桥" class="headerlink" title="南桥和北桥"></a>南桥和北桥</h2><p>南桥和北桥是主板芯片组中的两个核心部件，它们起到协调 CPU 和其他系统组件之间通信的作用。</p>
<ul>
<li><p><strong>北桥</strong></p>
<p>北桥是主板芯片组中的一部分，负责连接 CPU 和内存、显卡等高速设备，以及提供系统总线。早期，北桥还包含了内存控制器等重要的子系统，但随着技术的进步，现在内存控制器已经整合到了 CPU 封装中，因此北桥的功能逐渐减弱。</p>
</li>
<li><p><strong>南桥</strong></p>
<p>南桥则负责连接低速设备接口，如硬盘、USB、网卡等，提供输入输出总线。此外，南桥还包括了一些重要的子系统，如硬盘控制器、USB 控制器、声卡等。</p>
</li>
</ul>
<p>在现代 CPU 架构中，北桥的功能已经被整合到了 CPU 封装中，因此南北桥已经不再是主板设计的必要组成部分。但是，南北桥的功能仍然存在于芯片组中，并且是支持 CPU 和其他系统组件之间通信的关键组件之一。</p>
<h2 id="32位与64位"><a href="#32位与64位" class="headerlink" title="32位与64位"></a>32位与64位</h2><p>CPU 的字组大小，也被称为 word size，指的是 CPU 每次能够处理的数据量。32位 CPU 的字组大小基于 CPU 解析的大小，即 4 个字节。而 64 位CPU 能够一次性读写 8 个字节（64位）的数据。</p>
<p>通常情况下，CPU 的字组大小会影响总线宽度和内存读写能力。由于 32 位CPU 的字组大小为 4 个字节，其最大寻址能力为 2^32 个字节，相当于 4GB。因此，最多只能支持 4GB 内存大小。相比之下，64位CPU的字组大小为 8 个字节，其最大寻址能力为 2^64 个字节，相当于 16EB。因此，64位CPU 能够支持更大的内存容量。</p>
<h2 id="外频与倍频"><a href="#外频与倍频" class="headerlink" title="外频与倍频"></a>外频与倍频</h2><p>在早期的CPU架构中，北桥用于连接CPU、内存和显卡设备，因此每个设备都必须与北桥连接，并且具有相同的工作频率。为了解决这个问题，前端总线（FSB，Front Side Bus）应运而生。然而，由于CPU的运算速度远远超过其他设备，因此需要使用外频和倍频来满足FSB的频率要求。</p>
<p>外频指的是CPU与外部元件进行数据传输时的速度。而倍频是CPU内部用来加速工作性能的一个倍数。</p>
<p>CPU的实际频率可以通过以下公式计算：CPU频率 &#x3D; 外频 x 倍频。通过调整外频和倍频的值，可以提高CPU的性能。</p>
<h2 id="超线程"><a href="#超线程" class="headerlink" title="超线程"></a>超线程</h2><p>超线程（HT，Hyper-Threading）是一种在CPU内部将重要的寄存器（register）分为两组的技术，使得每组寄存器都可以供程序使用。因此，两个程序可以同时竞争CPU的运算单元，而不需要通过操作系统的多任务切换。</p>
<p>通过HT机制，操作系统可以使用实际核心的两倍数量，并且让每个核心逻辑上分离。在支持多核心运行的程序时，只要运算达不到100%的CPU使用率，超线程确实能帮助提升执行速度，更好地利用CPU性能。</p>
<p>在某些情况下，超线程可能会降低性能，例如在CPU达到100%使用率时，超线程可能会增加CPU的开销并导致性能下降。</p>
<h2 id="多级缓存"><a href="#多级缓存" class="headerlink" title="多级缓存"></a>多级缓存</h2><p>一般CPU拥有二级(L2 Cache)或更多级缓存，由比DRAM速度更快的静态随机访问内存(SRAM, Static Random Access Memory)组成，用于存放一些常用的数据。这样，数据可以不通过内存读取，从而大幅提升性能。</p>
<h1 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h1><p>CPU处理的数据来源于内存，而处理完毕的数据也要先写回内存，再从内存传输到输出单元。</p>
<p>内存的主要组件是动态随机访问内存(DRAM, Dynamic Random Access Memory)，只有在通电时才能记录和使用。由于断电后数据会消失，因此也被称为挥发性内存。</p>
<h2 id="内存类型"><a href="#内存类型" class="headerlink" title="内存类型"></a>内存类型</h2><p>内存从SDRAM发展为DDR（Double Data Rate），也就是所谓的双倍数据传输速度SDRAM，它可以在一次工作周期中进行两次数据传输。</p>
<p>例如DDR400的内存，代表数据宽度为64bit，外频为200MHz，频率为400MHz，频宽为3.2GB&#x2F;s。</p>
<h2 id="内存速度"><a href="#内存速度" class="headerlink" title="内存速度"></a>内存速度</h2><p>内存工作频率由CPU内的内存控制器决定。例如，假如内存频率为1600MHz，总线宽度为64bit，理论最大传输速度为：</p>
<p>$1600MHz<em>64bit&#x3D;1600MHz</em>8Bytes&#x3D;12800MB&#x2F;s&#x3D;12.8GB&#x2F;s$</p>
<h2 id="多通道设计"><a href="#多通道设计" class="headerlink" title="多通道设计"></a>多通道设计</h2><p>当两条同样的内存插入支持内存双通道的主板中时，总线宽度由64bit升级到128bit，传输速度翻倍。这是双通道内存的设计理念。</p>
<p>除了双通道外，服务器提供三信道甚至四信道的内存环境。</p>
<h2 id="物理地址扩展"><a href="#物理地址扩展" class="headerlink" title="物理地址扩展"></a>物理地址扩展</h2><p>物理地址扩展（PAE）是基于x86服务器的一种功能，它使运行Windows Server版本的计算机可以支持4GB以上物理内存。物理地址扩展允许将最多64GB的物理内存用作常规的4 KB页面，并扩展内核能使用的位数以将物理内存地址从32位扩展到36位。</p>
<h1 id="主板"><a href="#主板" class="headerlink" title="主板"></a>主板</h1><p>主板（Mainboard）是一种电脑硬件，由芯片组构成，用于沟通和连接各种设备，为CPU提供支持和资源。</p>
<p>现代主板一般集成了许多设备元件，如声卡、网卡、显卡、磁盘整合卡等。</p>
<h2 id="CMOS芯片"><a href="#CMOS芯片" class="headerlink" title="CMOS芯片"></a>CMOS芯片</h2><p>CMOS芯片是一种低功耗的、非易失性的芯片，它用于记录主板的重要参数，例如系统时间、CPU频率、设备I&#x2F;O地址和IRQ等信息。由于这些参数需要在断电后仍能保持，CMOS芯片需要额外的电子供电来保存这些设置。</p>
<h2 id="BIOS"><a href="#BIOS" class="headerlink" title="BIOS"></a>BIOS</h2><p>BIOS (Basic Input Output System)是一种固化在主板上的程序，用于初始化和测试硬件设备，加载操作系统，并提供各种底层服务和功能。BIOS存储在闪存（Flash Memory）或EEPROM中，可以在开机时被执行。主要用途是加载和修改CMOS（Complementary Metal-Oxide Semiconductor）中的参数，例如系统时间、CPU频率、设备I&#x2F;O地址和IRQ等。同时，BIOS也尝试调用存储设备中的开机程序，以启动操作系统。</p>
<p>通常在开机时按下[del]键或[F1]键可以进入BIOS设置界面，进行各种参数设置和硬件配置。</p>
<h2 id="UEFI"><a href="#UEFI" class="headerlink" title="UEFI"></a>UEFI</h2><p>UEFI (Unified Extensible Firmware Interface) 是新一代的固件接口标准，相比于传统的 BIOS 更加先进。UEFI 可以使用一个特制的 shell 来做一些管理工作。</p>
<h2 id="固件"><a href="#固件" class="headerlink" title="固件"></a>固件</h2><p>固件(firmware)是绑定在硬件上的控制软件，例如磁盘阵列卡、网卡等。通常储存在只读存储器(Read Only Memory, ROM)中，以保证固件的安全性。</p>
<h2 id="PCI插槽"><a href="#PCI插槽" class="headerlink" title="PCI插槽"></a>PCI插槽</h2><p>主板上的扩展插槽主要有PCI和PCI-E两种类型，它们的速度和频宽如下：</p>
<table>
<thead>
<tr>
<th>规格</th>
<th>宽度(bit)</th>
<th>速度(MHz)</th>
<th>频宽</th>
</tr>
</thead>
<tbody><tr>
<td>PCI</td>
<td>32</td>
<td>33</td>
<td>133MB&#x2F;s</td>
</tr>
<tr>
<td>PCI 2.2</td>
<td>64</td>
<td>66</td>
<td>533MB&#x2F;s</td>
</tr>
<tr>
<td>PCI-X</td>
<td>64</td>
<td>133</td>
<td>1064MB&#x2F;s</td>
</tr>
<tr>
<td>AGP 4x</td>
<td>32</td>
<td>66x4</td>
<td>1066MB&#x2F;s</td>
</tr>
<tr>
<td>AGP 8x</td>
<td>32</td>
<td>66x8</td>
<td>2133MB&#x2F;s</td>
</tr>
<tr>
<td>PCI-E x1</td>
<td></td>
<td></td>
<td>250MB&#x2F;s</td>
</tr>
<tr>
<td>PCI-E x8</td>
<td></td>
<td></td>
<td>2GB&#x2F;s</td>
</tr>
<tr>
<td>PCI-E 2.0 x8</td>
<td></td>
<td></td>
<td>4GB&#x2F;s</td>
</tr>
<tr>
<td>PCI-E 3.0 x8</td>
<td></td>
<td></td>
<td>8GB&#x2F;s</td>
</tr>
<tr>
<td>PCI-E 4.0 x8</td>
<td></td>
<td></td>
<td>16GB&#x2F;s</td>
</tr>
</tbody></table>
<p>一般来说，PCI-E的规格由插槽的长度决定，PCI-E插槽的工作模式可以参考主板的说明书。如果将一个速度为x16的设备插在一个速度为x8的PCI-E插槽上，该设备将以x8的速度运行。</p>
<p>例如，一个CPU通常支持16个信道（PCI-E 3.0 x16），如果主板上有三个PCI-E插槽，那么PCI-E插槽的速度可以工作在以下模式：1 x16，2 x8，1 x8 + 2 x4，具体取决于插入的设备数量。</p>
<h2 id="USB接口"><a href="#USB接口" class="headerlink" title="USB接口"></a>USB接口</h2><p>USB接口一般用来连接U盘、移动硬盘盒、键盘、鼠标等设备。各版本的带宽与速度对比如下：</p>
<table>
<thead>
<tr>
<th>版本</th>
<th>带宽</th>
<th>速度(MB&#x2F;s)</th>
</tr>
</thead>
<tbody><tr>
<td>USB 1.0</td>
<td>12 Mbit&#x2F;s</td>
<td>1.5</td>
</tr>
<tr>
<td>USB 2.0</td>
<td>480 Mbit&#x2F;s</td>
<td>60</td>
</tr>
<tr>
<td>USB 3.0</td>
<td>5 Gbit&#x2F;s</td>
<td>500</td>
</tr>
<tr>
<td>USB 3.1</td>
<td>10 Gbit&#x2F;s</td>
<td>1000</td>
</tr>
</tbody></table>
<p>为了方便区分版本，主板给USB接口采用不同颜色进行显示：白色代表USB 2.0，蓝色代表USB 3.0，红色代表USB 3.1。</p>
<h2 id="其他接口"><a href="#其他接口" class="headerlink" title="其他接口"></a>其他接口</h2><p>主板上常见的其他接口如下：</p>
<ul>
<li><p><strong>音频输入与输出</strong></p>
<p>一些3.5mm圆形插孔，一般用绿色表示耳机插孔，粉红色表示麦克风输入插孔。</p>
</li>
<li><p><strong>RJ-45网络接口</strong></p>
<p>方形接口，用来插入网线。</p>
</li>
<li><p><strong>HDMI接口</strong></p>
<p>HDMI接口一般用于视频输出。如果主板上有板载显卡，一般会提供该接口。</p>
</li>
</ul>
<h2 id="设备I-x2F-O地址与IRQ中断信道"><a href="#设备I-x2F-O地址与IRQ中断信道" class="headerlink" title="设备I&#x2F;O地址与IRQ中断信道"></a>设备I&#x2F;O地址与IRQ中断信道</h2><p>主板芯片组通过I&#x2F;O地址和IRQ中断信道来控制设备。</p>
<ul>
<li><p><strong>I&#x2F;O地址</strong></p>
<p>I&#x2F;O地址用来标识对应的设备，如果两个设备使用相同的I&#x2F;O地址会造成地址冲突，导致设备无法正常工作。</p>
</li>
<li><p><strong>IRQ中断信道</strong></p>
<p>IRQ用来标识设备工作状态，以方便CPU分配工作任务。每个设备都有自己的IRQ中断信道，当设备需要CPU处理时，会通过IRQ向CPU发出中断请求。CPU会停止当前的任务，处理中断请求，并在完成处理后返回原先的任务。</p>
</li>
</ul>
<h1 id="显卡"><a href="#显卡" class="headerlink" title="显卡"></a>显卡</h1><p>显卡是计算机中的一种重要的组件，主要负责图像和影像的显示，也被称为视频显卡（Video Card）或图形加速卡（Graphics Card）。</p>
<h2 id="显存"><a href="#显存" class="headerlink" title="显存"></a>显存</h2><p>由于每个图像需要占用内存空间来存储颜色信息，因此显卡上有一个专门用于存储图像信息的内存，称为显存。</p>
<h2 id="GPU"><a href="#GPU" class="headerlink" title="GPU"></a>GPU</h2><p>除了负责图像显示，显卡上还有一个专门用于进行3D运算的加速芯片，称为GPU。</p>
<h2 id="显卡插槽"><a href="#显卡插槽" class="headerlink" title="显卡插槽"></a>显卡插槽</h2><p>由于显卡需要大量的数据传输，因此使用能提供高带宽的PCI-E插槽。</p>
<h2 id="显卡接口"><a href="#显卡接口" class="headerlink" title="显卡接口"></a>显卡接口</h2><p>常见显卡上用来连接显示器的接口如下:</p>
<ul>
<li><p><strong>D-Sub(VGA)</strong></p>
<p>是较早之前的连接接口，主要为15针的连接，用于模拟信号传输。</p>
</li>
<li><p><strong>DVI</strong></p>
<p>有提供数字传输的DVI-D和整合数字和模拟传输的DVI-I两种类型。</p>
</li>
<li><p><strong>HDMI</strong></p>
<p>可以同时传输图像和声音。</p>
</li>
<li><p><strong>DP(DisplayPort)</strong></p>
<p>类似于HDMI。</p>
</li>
</ul>
<h1 id="硬盘"><a href="#硬盘" class="headerlink" title="硬盘"></a>硬盘</h1><p>硬盘是计算机中用于存储数据的设备，一般分为机械硬盘和固态硬盘。</p>
<h2 id="机械硬盘的组成"><a href="#机械硬盘的组成" class="headerlink" title="机械硬盘的组成"></a>机械硬盘的组成</h2><p>传统机械硬盘（HDD，Hard Disk Drive）的物理结构如下：</p>
<ul>
<li><p><strong>盘片</strong></p>
<p>数据记录介质，可以有一个或多个盘片。</p>
</li>
<li><p><strong>主轴电机</strong></p>
<p>带动盘片旋转，转速越高，读写速度越快。常见的转速有7200 rpm（转&#x2F;分钟）和5400 rpm。</p>
</li>
<li><p><strong>读写磁头</strong></p>
<p>读取和写入数据，每个盘片面都有一个磁头。</p>
</li>
<li><p><strong>机械臂</strong></p>
<p>控制磁头的位置，使其能够读取或写入指定的盘片面。</p>
</li>
</ul>
<p>此外，硬盘电路板上还有一个小容量的闪存用作缓冲内存，用于临时提高硬盘性能。</p>
<p>机械硬盘非常脆弱，因此在通电状态下绝对不要发生碰撞或直接拔插电源线。否则可能会导致逻辑坏道（文件系统损坏）或物理坏道。</p>
<h2 id="机械硬盘盘片"><a href="#机械硬盘盘片" class="headerlink" title="机械硬盘盘片"></a>机械硬盘盘片</h2><p>机械硬盘盘片的表面结构如下：</p>
<ul>
<li><p><strong>扇区（sector）</strong></p>
<p>盘片同心圆上切出的小块区域，是硬盘的最小物理存储单元。传统硬盘的扇区容量为512字节，而现代硬盘则采用了4KB扇区设计。</p>
</li>
<li><p><strong>磁道（track）</strong></p>
<p>盘片同心圆上的一个圆环，由一系列相同半径的扇区组成。</p>
</li>
<li><p><strong>柱面（cylinder）</strong></p>
<p>所有盘片同心圆上的同一磁道就构成一个柱面。</p>
</li>
</ul>
<p>由于同心圆外圈的扇区比内圈的扇区多，因此硬盘的数据读写是从外向内进行的。</p>
<p>传统机械硬盘的容量计算公式为：$磁头数<em>柱面</em>扇区数*512Bytes$​​</p>
<h2 id="硬盘传输接口"><a href="#硬盘传输接口" class="headerlink" title="硬盘传输接口"></a>硬盘传输接口</h2><p>硬盘与主板连接接口经过多次改版，目前主流的有SATA和SAS接口。</p>
<ul>
<li><p><strong>IDE接口</strong></p>
<p>使用的平行线可以连接两个设备，因此有主&#x2F;从(Master&#x2F;Slave)构架，可以通过跳针设置。</p>
<p>接口传输速度为Ultra 133规格，理论速度最高133MB&#x2F;s。</p>
</li>
<li><p><strong>SATA接口</strong></p>
<p>在家用机上IDE接口的替代接口。SATA的平行线将数据传输和供电分开。一条平行线对应一个设备，没有跳针设计。</p>
<p>目前主流使用的SATA 3.0版本传输速度为600MB&#x2F;s。</p>
</li>
<li><p><strong>SCSI接口</strong></p>
<p>在以前服务器硬盘常用接口。硬盘在控制器上含有一块处理器，用来支持一些高级功能。</p>
</li>
<li><p><strong>SAS接口</strong></p>
<p>SAS（Serial Attached SCSI）是串行式SCSI的意思，目前已在服务器领域全面取代了SCSI。</p>
<p>SAS 3.0的传输速度能达到1200MB&#x2F;s。</p>
</li>
</ul>
<h2 id="固态硬盘"><a href="#固态硬盘" class="headerlink" title="固态硬盘"></a>固态硬盘</h2><p>固态硬盘(SSD, Solid State Disk)以NAND闪存作为储存介质，因此不存在机械硬盘的磁头、盘片等结构，也没有数据分散的问题，读写速度和延迟时间比机械硬盘更优秀。</p>
<p>固态硬盘的寿命和速度取决于使用的内存颗粒类型，常见的类型从好到差分别为SLC、MLC、TLC、QLC。</p>
<p>一般而言，电脑使用固态硬盘作为系统盘，数据储存在机械硬盘上，可以有效提升整个系统性能。</p>
<h1 id="电源"><a href="#电源" class="headerlink" title="电源"></a>电源</h1><p>电源供应器（Power Supply Unit，PSU）用于给主板、CPU、显卡和硬盘等硬件供电。选择质量好的电源可以有效降低硬件意外损坏的概率。</p>
<p>如果使用诸如AIDA等软件对未超频的电脑进行测试时，在测试过程中出现中途断电或重启等情况，说明电源的额定功率不够或者不稳定。需要减少设备连接或者更换更高功率的电源。</p>
<p>在选购电源时，除了考虑电源的额定功率之外，还需要考虑能源转换率，也就是$输入功率&#x2F;输出功率$的值。转换率值越大越好。</p>
]]></content>
  </entry>
</search>
